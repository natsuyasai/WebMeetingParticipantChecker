<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style
        x:Key="WindowStyle"
        BasedOn="{StaticResource {x:Type Window}}"
        TargetType="Window">
        <Setter Property="Background" Value="#FFFFFF" />
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="32"
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}"
                    UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect
                    BlurRadius="20"
                    Opacity="0.50"
                    ShadowDepth="0"
                    Color="#E0E0E0" />
            </Setter.Value>
        </Setter>
    </Style>
    <!--  グリッド  -->
    <Style x:Key="GridStyle" TargetType="Grid">
        <Setter Property="Background" Value="#000000" />
    </Style>
    <!--  ボタン用  -->
    <Style
        x:Key="FlatButton"
        BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
        TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#2b2b2b" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#323232" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#272727" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Foreground" Value="#e0e0e0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#707070" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  ヘッダボタン用  -->
    <Style
        x:Key="HeaderButton"
        BasedOn="{StaticResource FlatButton}"
        TargetType="Button">
        <Setter Property="Height" Value="24px" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
    </Style>
    <!--  ヘッダボタン用  -->
    <Style
        x:Key="HeaderSystemButton"
        BasedOn="{StaticResource FlatButton}"
        TargetType="Button">
        <Setter Property="Background" Value="#000000" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="FontFamily" Value="Marlett" />
        <Setter Property="Width" Value="32px" />
        <Setter Property="Height" Value="32px" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  ヘッダボタン用  -->
    <Style
        x:Key="HeaderCloseSystemButton"
        BasedOn="{StaticResource HeaderSystemButton}"
        TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#e81123" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#8b0a14" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  リストビュー用  -->
    <Style
        x:Key="ListViewStyle"
        BasedOn="{StaticResource {x:Type ListBox}}"
        TargetType="ListView">
        <Setter Property="Background" Value="#000000" />
    </Style>
    <!--  ラベル用  -->
    <Style
        x:Key="LablelStyle"
        BasedOn="{StaticResource {x:Type Label}}"
        TargetType="Label">
        <Setter Property="Foreground" Value="#e0e0e0" />
    </Style>
    <!--  チェックボックス用  -->
    <Style
        x:Key="CheckBoxStyle"
        BasedOn="{StaticResource {x:Type CheckBox}}"
        TargetType="CheckBox">
        <Setter Property="Foreground" Value="#e0e0e0" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#707070" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  テキストブロック用  -->
    <Style
        x:Key="TextBlockStyle"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        TargetType="TextBlock">
        <Setter Property="Foreground" Value="#e0e0e0" />
    </Style>
    <!--  テキストボックス用  -->
    <Style
        x:Key="TextBoxStyle"
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="TextBox">
        <Setter Property="Foreground" Value="#e0e0e0" />
        <Setter Property="Background" Value="#2d2d2d" />
    </Style>
    <!--  テキストボックス用  -->
    <Style
        x:Key="PasswordBoxStyle"
        BasedOn="{StaticResource {x:Type PasswordBox}}"
        TargetType="PasswordBox">
        <Setter Property="Foreground" Value="#e0e0e0" />
        <Setter Property="Background" Value="#2d2d2d" />
    </Style>
    <!--  コンボボックス用  -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#cccccc" />
    <SolidColorBrush x:Key="ComboBoxMauseOverlBorderBrush" Color="#e0e0e0" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#00000000" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#595959" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#000000" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#595959" />
    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
        <Grid Height="32px">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Border
                Name="Border"
                Grid.ColumnSpan="2"
                Background="{StaticResource ComboBoxNormalBackgroundBrush}"
                BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                BorderThickness="1.4"
                CornerRadius="2" />
            <Border
                Name="ButtonBorder"
                Grid.Column="1"
                Margin="1,1,1,1"
                Background="{StaticResource ComboBoxNormalBackgroundBrush}"
                BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                BorderThickness="0"
                CornerRadius="0" />

            <Path
                Name="Arrow"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                Fill="#e0e0e0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ComboBoxMauseOverlBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style
        x:Key="FlatComboBox"
        BasedOn="{StaticResource {x:Static ToolBar.ComboBoxStyleKey}}"
        TargetType="{x:Type ComboBox}">
        <Setter Property="TextElement.Foreground" Value="#e0e0e0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            Grid.Column="2"
                            ClickMode="Press"
                            Focusable="False"
                            IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                            Template="{StaticResource ComboBoxToggleButtonTemplate}" />
                        <ContentPresenter
                            Name="ContentSite"
                            Margin="8,4,4,4"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />

                        <!--  Popup showing items  -->
                        <Popup
                            Name="Popup"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Grid
                                Name="DropDown"
                                MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border
                                    Name="DropDownBorder"
                                    Margin="0,0,0,0"
                                    Background="#404040"
                                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                                    BorderThickness="0,0,0,0"
                                    CornerRadius="2" />
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  コンテキストメニュー用  -->
    <Style
        x:Key="{x:Type ContextMenu}"
        BasedOn="{StaticResource {x:Type ContextMenu}}"
        TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border
                        Name="Border"
                        Background="#404040"
                        BorderBrush="#404040"
                        BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,4,0,4" />
                            <Setter TargetName="Border" Property="CornerRadius" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  コンテキストメニューの一行分用  -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="0"
                    Margin="8,0,8,0"
                    VerticalAlignment="Center"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#333333" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#595959" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--  コンテキストメニューアイテム用  -->
    <Style
        x:Key="MenuItemStyle"
        BasedOn="{StaticResource {x:Type MenuItem}}"
        TargetType="MenuItem">
        <Setter Property="MenuItem.Foreground" Value="#e0e0e0" />
        <Setter Property="MenuItem.Height" Value="32px" />
        <Setter Property="MenuItem.FontSize" Value="13px" />
    </Style>
    <!--  トグルボタン用  -->
    <Style
        x:Key="RadioToggleButton"
        BasedOn="{StaticResource {x:Type ToggleButton}}"
        TargetType="RadioButton">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Height" Value="24px" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#333333" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#e0e0e0" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="#1a1a1a" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Background" Value="#000000" />
                <Setter Property="Foreground" Value="#e0e0e0" />
            </Trigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="Background" Value="#000000" />
                <Setter Property="Foreground" Value="#808080" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>